/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SportsStoreManagerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.SportsStoreManagerOrganization;

import Business.Products.Product;
import Business.Products.ProductDirectory;
import Business.UserAccount.UserAccount;
import Business.Validations.Validations;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import UserInterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

/**
 *
 * @author shahd
 */
public class ViewProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewProductJPanel
     */
    private JPanel userProcessContainer;
    private SportsStoreManagerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private ProductDirectory prodDir;
    private Product prod;
    private String filename;
    Validations validations = new Validations();
    public ViewProductJPanel(JPanel userProcessContainer, UserAccount account, SportsStoreManagerOrganization organization, Enterprise enterprise, Product prod ,ProductDirectory prodDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.prodDir=prodDir;
        this.prod=prod;  
        
        
        
        nameTxtField.setEnabled(false);
        CategoryJComboBox.setEnabled(false);
        CategoryJComboBox1.setEnabled(false);
        descTxtArea.setEnabled(false);
        costPriceTxtField.setEnabled(false);
        sellPriceText.setEnabled(false);
        uploadImageButton.setEnabled(false);
        brandNameTxtField.setEnabled(false);
        qtyTxtField.setEnabled(false);
        qtyTxtField1.setEnabled(false);
        saveButton.setEnabled(false);
        weatherCombo.setEnabled(false);
        
        nameTxtField.setText(prod.getName());
        CategoryJComboBox.setSelectedItem(prod.getCategory());
        CategoryJComboBox1.setSelectedItem(prod.getSubCategory());
        descTxtArea.setText(prod.getDescription());
        brandNameTxtField.setText(prod.getBrandName());
        qtyTxtField.setText(String.valueOf(prod.getInitialQuantity()));
        qtyTxtField1.setText(String.valueOf(prod.getRemainingQuantity()));
        pathName.setText(prod.getImagePath());
        costPriceTxtField.setText(String.valueOf(prod.getCostPrice()));
        sellPriceText.setText(String.valueOf(prod.getSellingPrice()));
        weatherCombo.setSelectedItem(prod.getSuitableWeather());
        
        System.out.println(prod.getImagePath());
        ImageIcon icon= new ImageIcon(prod.getImagePath());
        Image icon2=icon.getImage();
        prodImage.setSize(200, 200);
        Image icon3=icon2.getScaledInstance(prodImage.getWidth(),prodImage.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon finalIcon = new ImageIcon(icon3);
        prodImage.setIcon(finalIcon);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CategoryJComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        uploadImageButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        brandNameLabel = new javax.swing.JLabel();
        CategoryJComboBox = new javax.swing.JComboBox();
        brandNameTxtField = new javax.swing.JTextField();
        SubCategory = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pathName = new javax.swing.JLabel();
        costPriceTxtField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTxtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        qtyLabel = new javax.swing.JLabel();
        qtyTxtField = new javax.swing.JTextField();
        qtyRLabel = new javax.swing.JLabel();
        qtyTxtField1 = new javax.swing.JTextField();
        prodImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        sellPriceText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        weatherCombo = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(33, 108, 205));

        CategoryJComboBox1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        CategoryJComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Shoes", "Apparel", "Equipments", "Accessories" }));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Product Image");

        nameTxtField.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        uploadImageButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        uploadImageButton.setText("Upload Image");
        uploadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImageButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Category");

        brandNameLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        brandNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        brandNameLabel.setText("Brand Name");

        CategoryJComboBox.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        CategoryJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cycling", "Excersice and Fitness", "Extreme Sports", "Backpacking", "Camping", "Hiking", "Running", "Walking", "Winter Sports" }));

        brandNameTxtField.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        SubCategory.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        SubCategory.setForeground(new java.awt.Color(255, 255, 255));
        SubCategory.setText("SubCategory");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CostPrice");

        costPriceTxtField.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Description");

        descTxtArea.setColumns(20);
        descTxtArea.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        descTxtArea.setRows(5);
        jScrollPane1.setViewportView(descTxtArea);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View or Update a product");

        qtyLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        qtyLabel.setForeground(new java.awt.Color(255, 255, 255));
        qtyLabel.setText("Initial Quanity");

        qtyTxtField.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        qtyRLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        qtyRLabel.setForeground(new java.awt.Color(255, 255, 255));
        qtyRLabel.setText("Remaining Qty");

        qtyTxtField1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        prodImage.setMaximumSize(new java.awt.Dimension(200, 200));
        prodImage.setPreferredSize(new java.awt.Dimension(200, 200));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/TrekManagerRole/backButton.png"))); // NOI18N
        jButton1.setText("\n");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("SellPrice");

        sellPriceText.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/TrekManagerRole/updateButton.png"))); // NOI18N
        updateButton.setContentAreaFilled(false);
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/TrekManagerRole/saveButton.png"))); // NOI18N
        saveButton.setContentAreaFilled(false);
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Weather");

        weatherCombo.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        weatherCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Winter", "Fall", "Summer" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(SubCategory)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CategoryJComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 302, Short.MAX_VALUE)
                            .addComponent(CategoryJComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(costPriceTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTxtField))
                        .addGap(82, 82, 82)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(sellPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(qtyLabel)
                            .addComponent(qtyRLabel)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(uploadImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pathName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(prodImage, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(brandNameTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(qtyTxtField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(weatherCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 300, Short.MAX_VALUE)
                                .addComponent(qtyTxtField1, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CategoryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubCategory)
                    .addComponent(CategoryJComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(sellPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(costPriceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pathName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(uploadImageButton))))
                            .addComponent(prodImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brandNameLabel)
                            .addComponent(brandNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qtyTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qtyLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qtyRLabel)
                            .addComponent(qtyTxtField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(weatherCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(updateButton))
                    .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void uploadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImageButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.setDialogTitle("Please Select an Image of the Product");
        choose.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filt = new FileNameExtensionFilter("Image Files ONLY","PNG","JPG","JPEG");
        choose.addChoosableFileFilter(filt);
        int r=choose.showOpenDialog(null);
        File f=choose.getSelectedFile();

        if ( r == JFileChooser.APPROVE_OPTION){
             filename = f.getAbsolutePath();
        }else
        JOptionPane.showMessageDialog(null,"Please select a File to Upload","Error",JOptionPane.INFORMATION_MESSAGE);

        pathName.setText(choose.getSelectedFile().getName());
    }//GEN-LAST:event_uploadImageButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SportsStoreManagerWorkAreaJPanel managerWorkAreaJPanel = (SportsStoreManagerWorkAreaJPanel) component;
        managerWorkAreaJPanel.populateProductTable();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
         
        nameTxtField.setEnabled(true);
        CategoryJComboBox.setEnabled(true);
        CategoryJComboBox1.setEnabled(true);
        descTxtArea.setEnabled(true);
        costPriceTxtField.setEnabled(true);
        sellPriceText.setEnabled(true);
        uploadImageButton.setEnabled(true);
        brandNameTxtField.setEnabled(true);
        qtyTxtField.setEnabled(true);
       weatherCombo.setEnabled(true);
       // qtyTxtField1.setEnabled(true);
        saveButton.setEnabled(true);
        updateButton.setEnabled(false);
        weatherCombo.setEnabled(true);
        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        
        try{
        if( nameTxtField.getText() == null || nameTxtField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Product Name cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(validations.atleastOneLetterValidation(nameTxtField.getText())){
            JOptionPane.showMessageDialog(null, "Please enter a valid Product Name","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(CategoryJComboBox.getSelectedItem() == null || CategoryJComboBox.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select a Category","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(CategoryJComboBox1.getSelectedItem() == null || CategoryJComboBox1.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select a Sub Category","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(costPriceTxtField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Cost Price cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(Float.parseFloat(costPriceTxtField.getText()) < 0){
            JOptionPane.showMessageDialog(null, "Please enter a valid Cost Price","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(descTxtArea.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Product Description cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(brandNameTxtField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Brand Name cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(!validations.onlyLettersValidation(brandNameTxtField.getText())){
            JOptionPane.showMessageDialog(null, "Brand Name can only contain letters","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(qtyTxtField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Initial Quantity cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(Integer.parseInt(qtyTxtField.getText()) < 0){
            JOptionPane.showMessageDialog(null, "Please enter a valid Initial Quantity","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(weatherCombo.getSelectedItem() == null || weatherCombo.getSelectedItem().toString().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select suitable Weather for the product","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(filename == null || filename.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select an Image for the product","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        prod.setName(nameTxtField.getText());
        prod.setCostPrice(Float.parseFloat(costPriceTxtField.getText()));
        prod.setCategory(CategoryJComboBox.getSelectedItem().toString());
        prod.setSubCategory(CategoryJComboBox1.getSelectedItem().toString());
        prod.setDescription(descTxtArea.getText());
        prod.setBrandName(brandNameTxtField.getText());
        prod.setSellingPrice(Float.parseFloat(costPriceTxtField.getText()));
        prod.setImagePath(filename);
        prod.setInitialQuantity(Integer.parseInt(qtyTxtField.getText()));
      //  prod.setRemainingQuantity(Integer.parseInt(qtyTxtField1.getText()));
        prod.setSuitableWeather(weatherCombo.getSelectedItem().toString());
        
        pathName.setText(filename);
       
        
        
        
        
        nameTxtField.setEnabled(false);
        CategoryJComboBox.setEnabled(false);
        CategoryJComboBox1.setEnabled(false);
        descTxtArea.setEnabled(false);
        costPriceTxtField.setEnabled(false);
        sellPriceText.setEnabled(false);
        uploadImageButton.setEnabled(false);
        brandNameTxtField.setEnabled(false);
        qtyTxtField.setEnabled(false);
        qtyTxtField1.setEnabled(false);
        saveButton.setEnabled(false);
        updateButton.setEnabled(true);
        weatherCombo.setEnabled(false);
        
        JOptionPane.showMessageDialog(null, "Product updated successfully");
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please select a valid Number","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_saveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CategoryJComboBox;
    private javax.swing.JComboBox CategoryJComboBox1;
    private javax.swing.JLabel SubCategory;
    private javax.swing.JLabel brandNameLabel;
    private javax.swing.JTextField brandNameTxtField;
    private javax.swing.JTextField costPriceTxtField;
    private javax.swing.JTextArea descTxtArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JLabel pathName;
    private javax.swing.JLabel prodImage;
    private javax.swing.JLabel qtyLabel;
    private javax.swing.JLabel qtyRLabel;
    private javax.swing.JTextField qtyTxtField;
    private javax.swing.JTextField qtyTxtField1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField sellPriceText;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton uploadImageButton;
    private javax.swing.JComboBox weatherCombo;
    // End of variables declaration//GEN-END:variables
}
