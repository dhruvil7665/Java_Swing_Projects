/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliner;

import Business.Airliner.Airliner;
import Business.Airliner.AirlinerDirectory;
import Business.ConfigurationFile;
import UserInterface.LoginScreen;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author shahd
 */
public class ViewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAirlinerJPanel
     */
    private JPanel jPanelRight;
    private Airliner airliner;
    private JPanel jPanelLeft;
    public ViewAirlinerJPanel(JPanel jPanelRight, JPanel jPanelLeft, Airliner airliner) {
        initComponents();
        this.jPanelRight = jPanelRight;
        this.airliner = airliner;
        this.jPanelLeft = jPanelLeft;
        populateData();
    }
    
    public void populateData(){
       
        txtAirlinerName.setText(airliner.getAirlinerName());
        txtAirlinerAddress.setText(airliner.getAirlinerAddress());
        txtAirlinerContactNo.setText(String.valueOf(airliner.getAirlinerContactNumber()));
        txtTotalFlights.setText(String.valueOf(airliner.getTotalFlightsPerDay()));
        txtCountryOfOrigin.setText(airliner.getCountryOfOrigin());
        txtYearOfEstablishment.setText(String.valueOf(airliner.getYearOfEstablishment()));
        txtAirlinerRating.setText(String.valueOf(airliner.getAirlinerRating()));
//        if(airliner.getAirlinerAircraftName().isEmpty()){
//            System.out.println("empty");
//            return;
//        }
        for(String cb: airliner.getAirlinerAircraftName()){
            if(cb == "Airbus A380"){
                cbAirBus1.setSelected(true);
            }
            
            if(cb == "Airbus A330"){
                cbAirBus2.setSelected(true);
            }
            
            if(cb == "Airbus A340"){
                cbAirBus3.setSelected(true);
            }
            
            if(cb == "Boeing 777"){
                cbBoeing1.setSelected(true);
            }
            
            if(cb == "Boeing 767"){
                cbBoeing2.setSelected(true);
            }
            
            if(cb == "Boeing 757"){
                cbBoeing3.setSelected(true);
            }
            
        }
    }
    
        private boolean onlyLettersValidation(String input){
        Pattern p = Pattern.compile("^[a-zA-Z]+$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    
    private boolean atleastOneLetterValidation(String input){
        Pattern p = Pattern.compile("^([^A-Za-z]+)$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    
    private boolean phoneNumValidation(String input){
        Pattern p = Pattern.compile("^(\\d{10})$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    
    private boolean yearValidation(String input){
        Pattern p = Pattern.compile("^(\\d{4})$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtAirlinerRating = new javax.swing.JTextField();
        btnUpdateAirliner = new javax.swing.JButton();
        jPanelCheckBox = new javax.swing.JPanel();
        cbAirBus1 = new javax.swing.JCheckBox();
        cbAirBus2 = new javax.swing.JCheckBox();
        cbAirBus3 = new javax.swing.JCheckBox();
        cbBoeing1 = new javax.swing.JCheckBox();
        cbBoeing2 = new javax.swing.JCheckBox();
        cbBoeing3 = new javax.swing.JCheckBox();
        txtAirlinerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAirlinerAddress = new javax.swing.JTextField();
        txtAirlinerContactNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTotalFlights = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCountryOfOrigin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtYearOfEstablishment = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSaveAirliner = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();

        jLabel8.setText("Aircraft Names");

        jLabel9.setText("Airliner Rating");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Airliner");

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtAirlinerRating.setEnabled(false);

        btnUpdateAirliner.setText("UPDATE");
        btnUpdateAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAirlinerActionPerformed(evt);
            }
        });

        cbAirBus1.setText("Airbus A380");
        cbAirBus1.setEnabled(false);

        cbAirBus2.setText("Airbus A330");
        cbAirBus2.setEnabled(false);

        cbAirBus3.setText("Airbus A340");
        cbAirBus3.setEnabled(false);

        cbBoeing1.setText("Boeing 777");
        cbBoeing1.setEnabled(false);

        cbBoeing2.setText("Boeing 767");
        cbBoeing2.setEnabled(false);

        cbBoeing3.setText("Boeing 757");
        cbBoeing3.setEnabled(false);

        javax.swing.GroupLayout jPanelCheckBoxLayout = new javax.swing.GroupLayout(jPanelCheckBox);
        jPanelCheckBox.setLayout(jPanelCheckBoxLayout);
        jPanelCheckBoxLayout.setHorizontalGroup(
            jPanelCheckBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCheckBoxLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanelCheckBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCheckBoxLayout.createSequentialGroup()
                        .addComponent(cbAirBus1)
                        .addGap(18, 18, 18)
                        .addComponent(cbAirBus2)
                        .addGap(18, 18, 18)
                        .addComponent(cbAirBus3))
                    .addGroup(jPanelCheckBoxLayout.createSequentialGroup()
                        .addComponent(cbBoeing1)
                        .addGap(26, 26, 26)
                        .addComponent(cbBoeing2)
                        .addGap(26, 26, 26)
                        .addComponent(cbBoeing3)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanelCheckBoxLayout.setVerticalGroup(
            jPanelCheckBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCheckBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCheckBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAirBus1)
                    .addComponent(cbAirBus2)
                    .addComponent(cbAirBus3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCheckBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBoeing1)
                    .addComponent(cbBoeing2)
                    .addComponent(cbBoeing3))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        txtAirlinerName.setEnabled(false);

        jLabel2.setText("Airliner Name");

        txtAirlinerAddress.setEnabled(false);

        txtAirlinerContactNo.setEnabled(false);

        jLabel3.setText("Address");

        txtTotalFlights.setEnabled(false);

        jLabel4.setText("Contact No.");

        txtCountryOfOrigin.setEnabled(false);

        jLabel5.setText("Total No. of Flights per Day");

        txtYearOfEstablishment.setEnabled(false);

        jLabel6.setText("Country of Origin");

        jLabel7.setText("Year of Establishment");

        btnSaveAirliner.setText("SAVE");
        btnSaveAirliner.setEnabled(false);
        btnSaveAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAirlinerActionPerformed(evt);
            }
        });

        jLabel10.setText("admin");

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(btnUpdateAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYearOfEstablishment, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCountryOfOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirlinerRating, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(2, 2, 2)
                                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAirlinerName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAirlinerAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAirlinerContactNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAirlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAirlinerAddress)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAirlinerContactNo)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCountryOfOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYearOfEstablishment, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanelCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAirlinerRating, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        jPanelRight.remove(this);
        
        for(Component comp: jPanelRight.getComponents()){
            if(comp instanceof ManageAirlinerJPanel){
                ManageAirlinerJPanel manageAirlinerJPanel = (ManageAirlinerJPanel) comp;
                manageAirlinerJPanel.populateTable();
            }
        }
        
        CardLayout layout = (CardLayout)this.jPanelRight.getLayout();
        layout.previous(jPanelRight);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAirlinerActionPerformed
        // TODO add your handling code here:
        txtAirlinerName.setEnabled(true);
        txtAirlinerAddress.setEnabled(true);
        txtAirlinerContactNo.setEnabled(true);
        txtTotalFlights.setEnabled(true);
        txtCountryOfOrigin.setEnabled(true);
        txtYearOfEstablishment.setEnabled(true);
        txtAirlinerRating.setEnabled(true);
        cbAirBus1.setEnabled(true);
        cbAirBus2.setEnabled(true);
        cbAirBus3.setEnabled(true);
        cbBoeing1.setEnabled(true);
        cbBoeing2.setEnabled(true);
        cbBoeing3.setEnabled(true);
        btnUpdateAirliner.setEnabled(false);
        btnSaveAirliner.setEnabled(true);
    }//GEN-LAST:event_btnUpdateAirlinerActionPerformed

    private void btnSaveAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAirlinerActionPerformed
        // TODO add your handling code here:
        String airlinerName ;
        String airlinerAddress;
        double airlinerContactNumber;
        int totalFlightsPerDay;
        float airlinerRating;
        String countryOfOrigin;
        int yearOfEstablishment;
        ArrayList<String> airlinerAircraftName = new ArrayList<String>();

        //Airliner Name
        airlinerName = txtAirlinerName.getText();
        if(airlinerName == null || airlinerName.isEmpty()){
            JOptionPane.showMessageDialog(null, "Airliner Name cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!onlyLettersValidation(airlinerName)){
            JOptionPane.showMessageDialog(null, "Airliner Name can only contain letters","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Airliner Address
        airlinerAddress = txtAirlinerAddress.getText();
        if(airlinerAddress == null || airlinerAddress.isEmpty()){
            JOptionPane.showMessageDialog(null, "Airliner Address cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(atleastOneLetterValidation(airlinerAddress)){
            JOptionPane.showMessageDialog(null, "Invalid Address","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //AirlinerContactNo.
        try{
            if(txtAirlinerContactNo.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Contact Number cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(!phoneNumValidation(txtAirlinerContactNo.getText())){
                JOptionPane.showMessageDialog(null, "Invalid Contact No., Contact No. can contain only 10 digits","Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            airlinerContactNumber = Double.parseDouble(txtAirlinerContactNo.getText());
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid Contact No.","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //TotalFlightsPerDay
        if(txtTotalFlights.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Total number of flights cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try{
            totalFlightsPerDay = Integer.parseInt(txtTotalFlights.getText());
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid  Number","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //CountryOfOrigin
        countryOfOrigin = txtCountryOfOrigin.getText();
        if(countryOfOrigin == null || countryOfOrigin.isEmpty()){
            JOptionPane.showMessageDialog(null, "Country of Origin cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!onlyLettersValidation(countryOfOrigin)){
            JOptionPane.showMessageDialog(null, "Country name can only have letters","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //YearOfEstablishment
        if(txtYearOfEstablishment.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Year of Establishment cannot be empty","Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        try {
//            DateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//            dateOfEstablishment = sdf.parse(txtDateOfEstablishment.getText());
              if(!yearValidation(txtYearOfEstablishment.getText())){
                  JOptionPane.showMessageDialog(null, "Year of Establishment should be of format 'yyyy'","Warning", JOptionPane.WARNING_MESSAGE);
                  return;
              }
              yearOfEstablishment = Integer.parseInt(txtYearOfEstablishment.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Plesae enter valid Year of Establishment","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Aircrafts
        boolean flag = false;
        for (Component c : jPanelCheckBox.getComponents()) {
            if(c instanceof JCheckBox){
                JCheckBox cb = (JCheckBox)c;
                if (cb.isSelected()){
                    airlinerAircraftName.add(cb.getText());
                    flag = true;
                }
            }
        }
        if(flag == false){
            JOptionPane.showMessageDialog(null, "Kindly select atleast on Aircraft","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //Rating
        try{
            airlinerRating = Float.parseFloat(txtAirlinerRating.getText());
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid Number","Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        airliner.setAirlinerName(airlinerName);
        airliner.setAirlinerAddress(airlinerAddress);
        airliner.setAirlinerContactNumber(airlinerContactNumber);
        airliner.setTotalFlightsPerDay(totalFlightsPerDay);
        airliner.setCountryOfOrigin(countryOfOrigin);
        airliner.setYearOfEstablishment(yearOfEstablishment);
        airliner.setAirlinerRating(airlinerRating);
        airliner.setAirlinerAircraftName(airlinerAircraftName);
        
        JOptionPane.showMessageDialog(null, "Airliner Updated successfully","Information", JOptionPane.INFORMATION_MESSAGE);
        btnSaveAirliner.setEnabled(false);
        btnUpdateAirliner.setEnabled(true);
        txtAirlinerName.setEnabled(false);
        txtAirlinerAddress.setEnabled(false);
        txtAirlinerContactNo.setEnabled(false);
        txtTotalFlights.setEnabled(false);
        txtCountryOfOrigin.setEnabled(false);
        txtYearOfEstablishment.setEnabled(false);
        txtAirlinerRating.setEnabled(false);
        cbAirBus1.setEnabled(false);
        cbAirBus2.setEnabled(false);
        cbAirBus3.setEnabled(false);
        cbBoeing1.setEnabled(false);
        cbBoeing2.setEnabled(false);
        cbBoeing3.setEnabled(false);
        populateData();
    }//GEN-LAST:event_btnSaveAirlinerActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        for(Component comp : jPanelRight.getComponents()){
            if(comp instanceof LoginScreen){

            } else{
                jPanelRight.remove(comp);
            }
            CardLayout layout = (CardLayout)this.jPanelRight.getLayout();
            layout.previous(jPanelRight);
        }
        for(Component comp : jPanelLeft.getComponents()){
            if(comp instanceof JButton)
            comp.setVisible(false);
        }
    }//GEN-LAST:event_btnLogOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnSaveAirliner;
    private javax.swing.JButton btnUpdateAirliner;
    private javax.swing.JCheckBox cbAirBus1;
    private javax.swing.JCheckBox cbAirBus2;
    private javax.swing.JCheckBox cbAirBus3;
    private javax.swing.JCheckBox cbBoeing1;
    private javax.swing.JCheckBox cbBoeing2;
    private javax.swing.JCheckBox cbBoeing3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelCheckBox;
    private javax.swing.JTextField txtAirlinerAddress;
    private javax.swing.JTextField txtAirlinerContactNo;
    private javax.swing.JTextField txtAirlinerName;
    private javax.swing.JTextField txtAirlinerRating;
    private javax.swing.JTextField txtCountryOfOrigin;
    private javax.swing.JTextField txtTotalFlights;
    private javax.swing.JTextField txtYearOfEstablishment;
    // End of variables declaration//GEN-END:variables
}
