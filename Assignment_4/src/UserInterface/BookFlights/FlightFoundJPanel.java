/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BookFlights;

import Business.Abstract.User;
import Business.Airliner.Airliner;
import Business.Airliner.AirlinerDirectory;
import Business.Flight.Flight;
import Business.Flight.FlightDirectory;
import Business.FlightBooking.BookingDirectory;
import UserInterface.LoginScreen;
import UserInterface.MainJFrame;
import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shahd
 */
public class FlightFoundJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FlightFoundJPanel
     */
    private JPanel rightPanel;
    private FlightDirectory flightdir;
    private AirlinerDirectory airlineDir;
    private String source;
    private String destination;
    private String timeFrame;
    private Date date_of_departure;
    private User userName; 
    private BookingDirectory bookingDir;
    private JPanel jPanelLeft;
    DefaultTableModel dtm;
    SimpleDateFormat time = new SimpleDateFormat("hh:mm");
    SimpleDateFormat date = new SimpleDateFormat("dd/MM/YYYY");
    public FlightFoundJPanel(JPanel rightPanel,JPanel jPanelLeft,FlightDirectory flightDirectory,AirlinerDirectory airlinerDirectory,String source,String destination,String timeFrame,Date date_of_departure,User userName,BookingDirectory bookingDir) throws ParseException {
        this.rightPanel=rightPanel;
        this.airlineDir=airlinerDirectory;
        this.flightdir=flightDirectory;
        this.source=source;
        this.destination=destination;
        this.timeFrame=timeFrame;
        this.date_of_departure=date_of_departure;
        this.userName = userName;
        this.bookingDir = bookingDir;
        this.jPanelLeft = jPanelLeft;
        initComponents();
        lblSource.setText("Source: "+source);
        lblDestination.setText("Destination: "+destination);
        lblDate.setText("Date of Departure: "+date.format(date_of_departure));
        lblUserName.setText(userName.getUserName());
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        flightFoundTbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblSource = new javax.swing.JLabel();
        lblDestination = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        flightFoundTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Name", "Airliner Name", "Departure Time", "Arrival Time", "Date of Arrival", "Flight Duration", "No. of Seats available", "Flight Cost ($)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightFoundTbl);
        if (flightFoundTbl.getColumnModel().getColumnCount() > 0) {
            flightFoundTbl.getColumnModel().getColumn(0).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(0).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(0).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(1).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(1).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(1).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(2).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(2).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(2).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(3).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(3).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(3).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(4).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(4).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(4).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(5).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(5).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(5).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(6).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(6).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(6).setMaxWidth(130);
            flightFoundTbl.getColumnModel().getColumn(7).setMinWidth(130);
            flightFoundTbl.getColumnModel().getColumn(7).setPreferredWidth(130);
            flightFoundTbl.getColumnModel().getColumn(7).setMaxWidth(130);
        }

        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Book a Flight");

        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1038, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSource, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(lblDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(240, 240, 240)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(150, 150, 150)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(516, 516, 516)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSource, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRows = flightFoundTbl.getSelectedRow();
        
        if(selectedRows < 0){
            JOptionPane.showMessageDialog(null, "Please select a Flight","Warning", JOptionPane.WARNING_MESSAGE);
        } else{
            CardLayout layout = (CardLayout)rightPanel.getLayout();
            rightPanel.add(new FlightBookJPanel(rightPanel,jPanelLeft,userName,(Flight) flightFoundTbl.getValueAt(selectedRows, 0), bookingDir));
            layout.next(rightPanel);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout)this.rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        MainJFrame.setUserName(null);
        for(Component comp : rightPanel.getComponents()){
            if(comp instanceof LoginScreen){

            } else{
                rightPanel.remove(comp);
            }
            CardLayout layout = (CardLayout)this.rightPanel.getLayout();
            layout.previous(rightPanel);
        }
        for(Component comp : jPanelLeft.getComponents()){
            if(comp instanceof JButton)
            comp.setVisible(false);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed
    public void populate() throws ParseException{
        Date minDepartTime;
        Date maxDepartTime;
         dtm = (DefaultTableModel)flightFoundTbl.getModel();
         dtm.setRowCount(0);
         if(timeFrame.equals("Morning Flight")){
             minDepartTime = time.parse("06:00");
             maxDepartTime = time.parse("14:59");
         } else if(timeFrame.equals("Evening Flight")){
             minDepartTime = time.parse("15:00");
             maxDepartTime = time.parse("21:59");
         }else if(timeFrame.equals("Overnight Flight")){
             minDepartTime = time.parse("00:00");
             maxDepartTime = time.parse("05:59");
         }else{
             minDepartTime = time.parse("00:00");
             maxDepartTime = time.parse("23:59");
         }
        for(Flight f : flightdir.getFlightList()){
            if(f.getSource().equalsIgnoreCase(source)&&f.getDestination().equalsIgnoreCase(destination)
                    &&f.getDate_of_departure().equals(date_of_departure)&&f.getDeparture_time().compareTo(minDepartTime) >=0  && f.getDeparture_time().compareTo(maxDepartTime) <= 0){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0]=f;
            row[1] = f.getAirlinerName();
            row[2] = time.format(f.getDeparture_time());
            row[3] = time.format(f.getArrival_time());
            row[4] = date.format(f.getDate_of_arrival());
            row[5] = f.getFlightDuration();
            row[6] = f.getTotalNumOfSeats();
            row[7] = f.getFlightCost();
            dtm.addRow(row);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout;
    private javax.swing.JTable flightFoundTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDestination;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblUserName;
    // End of variables declaration//GEN-END:variables
}
