/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BookFlights;

import Business.Abstract.User;
import Business.Flight.Flight;
import Business.FlightBooking.Booking;
import Business.FlightBooking.BookingDirectory;
import Business.FlightBooking.Passenger;
import Business.User.Customer;
import UserInterface.LoginScreen;
import UserInterface.MainJFrame;
import UserInterface.ManageAirliner.ManageAirlinerJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dedhi
 */
public class ViewBookingHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewBookingHistoryJPanel
     */
    JPanel jPanelRight;
    BookingDirectory bookingDirectory;
    User customer;
    SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat time = new SimpleDateFormat("hh:mm");
    private JPanel jPanelLeft;
    public ViewBookingHistoryJPanel(JPanel jPanelRight,JPanel  jPanelLeft,BookingDirectory bookingDirectory, User customer) {
        this.jPanelRight = jPanelRight;
        this.bookingDirectory = bookingDirectory;
        this.jPanelLeft = jPanelLeft;
        this.customer = customer;
        initComponents();
        lblUserName.setText(customer.getUserName());
        populateTable(customer);
    }
    
    public ViewBookingHistoryJPanel(JPanel jPanelRight, JPanel jPanelLeft, BookingDirectory bookingDirectory) {
        this.jPanelRight = jPanelRight;
        this.bookingDirectory = bookingDirectory;
        this.jPanelLeft = jPanelLeft;
        initComponents();
        lblUserName.setText("admin");
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblBookingDetails.getModel();
        dtm.setRowCount(0);
        for(Booking b : bookingDirectory.getBookingDirectory()){
            Object row[] = new Object[dtm.getColumnCount()];
            Flight flight = b.getFlight();
            row[0] = b;
            row[1] = flight.getFlightName()+"-"+flight.getAirlinerName().getAirlinerName();
            row[2] = flight.getSource();
            row[3] = flight.getDestination();
            row[4] = date.format(b.getFlight().getDate_of_departure())+" "+time.format(b.getFlight().getDeparture_time());
            row[5] = date.format(b.getFlight().getDate_of_arrival())+" "+time.format(b.getFlight().getArrival_time());
            row[6] = (b.getPassengerDirectory().getPassengerDirectory().size())*flight.getFlightCost();
            row[7] = b.getPassengerDirectory().getPassengerDirectory().size();
            dtm.addRow(row);            
        }
    }
    
        public void populateTable(User userName){
        DefaultTableModel dtm = (DefaultTableModel) tblBookingDetails.getModel();
        dtm.setRowCount(0);
        for(Booking b : bookingDirectory.getBookingDirectory()){
            if(userName.getUserName().equals(b.getCustomer().getUserName())){
                Object row[] = new Object[dtm.getColumnCount()];
                Flight flight = b.getFlight();
                row[0] = b;
                row[1] = flight.getFlightName()+"-"+flight.getAirlinerName().getAirlinerName();
                row[2] = flight.getSource();
                row[3] = flight.getDestination();
                row[4] = date.format(b.getFlight().getDate_of_departure())+" "+time.format(b.getFlight().getDeparture_time());
                row[5] = date.format(b.getFlight().getDate_of_arrival())+" "+time.format(b.getFlight().getArrival_time());
                row[6] = (b.getPassengerDirectory().getPassengerDirectory().size())*flight.getFlightCost();
                row[7] = b.getPassengerDirectory().getPassengerDirectory().size();
                dtm.addRow(row);            
            }
        }
    }
    
    public void passengerTablePopulate(Booking booking){
        DefaultTableModel dtm = (DefaultTableModel) tblPassengerList.getModel();
        dtm.setRowCount(0);
        for(Passenger p : booking.getPassengerDirectory().getPassengerDirectory()){
            Object row[] = new Object[dtm.getColumnCount()];
            row[0] = p.getPassengerName();
            row[1] = p.getPassengerPassportNumber();
            row[2] = p.getPassengerAge();
            dtm.addRow(row);            
        }           
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookingDetails = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        btnLogout2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPassengerList = new javax.swing.JTable();
        btnPassengerList = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("View Booking Details");

        tblBookingDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Flight Name", "Source City", "Destination City", "Departure Date and Time", "Arrival Date and Time", "Total Cost ($)", "Total No. of Passengers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBookingDetails);
        if (tblBookingDetails.getColumnModel().getColumnCount() > 0) {
            tblBookingDetails.getColumnModel().getColumn(0).setMinWidth(120);
            tblBookingDetails.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblBookingDetails.getColumnModel().getColumn(0).setMaxWidth(120);
            tblBookingDetails.getColumnModel().getColumn(1).setMinWidth(120);
            tblBookingDetails.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblBookingDetails.getColumnModel().getColumn(1).setMaxWidth(120);
            tblBookingDetails.getColumnModel().getColumn(2).setMinWidth(120);
            tblBookingDetails.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblBookingDetails.getColumnModel().getColumn(2).setMaxWidth(120);
            tblBookingDetails.getColumnModel().getColumn(3).setMinWidth(120);
            tblBookingDetails.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblBookingDetails.getColumnModel().getColumn(3).setMaxWidth(120);
            tblBookingDetails.getColumnModel().getColumn(4).setMinWidth(150);
            tblBookingDetails.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblBookingDetails.getColumnModel().getColumn(4).setMaxWidth(150);
            tblBookingDetails.getColumnModel().getColumn(5).setMinWidth(150);
            tblBookingDetails.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblBookingDetails.getColumnModel().getColumn(5).setMaxWidth(150);
            tblBookingDetails.getColumnModel().getColumn(6).setMinWidth(120);
            tblBookingDetails.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblBookingDetails.getColumnModel().getColumn(6).setMaxWidth(120);
            tblBookingDetails.getColumnModel().getColumn(7).setMinWidth(170);
            tblBookingDetails.getColumnModel().getColumn(7).setPreferredWidth(170);
            tblBookingDetails.getColumnModel().getColumn(7).setMaxWidth(170);
        }

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        btnLogout2.setText("Log Out");
        btnLogout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout2ActionPerformed(evt);
            }
        });

        tblPassengerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger Name", "Passenger Passport Number", "Passenger Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPassengerList);
        if (tblPassengerList.getColumnModel().getColumnCount() > 0) {
            tblPassengerList.getColumnModel().getColumn(0).setResizable(false);
            tblPassengerList.getColumnModel().getColumn(1).setResizable(false);
            tblPassengerList.getColumnModel().getColumn(2).setResizable(false);
        }

        btnPassengerList.setText("Get Passenger List");
        btnPassengerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassengerListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPassengerList, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(btnLogout2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnLogout2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPassengerList, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        //for(Compo)
        jPanelRight.remove(this);
        CardLayout layout = (CardLayout)this.jPanelRight.getLayout();
        layout.previous(jPanelRight);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLogout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout2ActionPerformed
        // TODO add your handling code here:
        MainJFrame.setUserName(null);
         for(Component comp : jPanelRight.getComponents()){
            if(comp instanceof LoginScreen){
                
            } else{
                jPanelRight.remove(comp);
            }
            CardLayout layout = (CardLayout)this.jPanelRight.getLayout();
            layout.previous(jPanelRight);
        }
        for(Component comp : jPanelLeft.getComponents()){
            if(comp instanceof JButton)
                comp.setVisible(false);
        }
    }//GEN-LAST:event_btnLogout2ActionPerformed

    private void btnPassengerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassengerListActionPerformed
        // TODO add your handling code here:
        int selectedRows = tblBookingDetails.getSelectedRow();
        if(selectedRows >= 0){
            Booking b = (Booking) tblBookingDetails.getValueAt(selectedRows, 0);
            passengerTablePopulate(b);
        } else{
            JOptionPane.showMessageDialog(null, "Kindly select a row","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnPassengerListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLogout2;
    private javax.swing.JButton btnPassengerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable tblBookingDetails;
    private javax.swing.JTable tblPassengerList;
    // End of variables declaration//GEN-END:variables
}
